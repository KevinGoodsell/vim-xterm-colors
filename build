#!/usr/bin/env python

import sys
import os

import fabricate

# These use exec:
# astronaut.vim (variable expansion)
# marklar.vim (variable expansion)
# twilight.vim (variable expansion)
# two2tango.vim (variable expansion)
#

dark_schemes = [
    'BlackSea.vim',
    'ChocolateLiquor.vim',
    'adaryn.vim',
    'adrian.vim',
    'aiseered.vim',
    'anotherdark.vim',
    'aqua.vim',
    'asu1dark.vim',
    'bluegreen.vim',
    'borland.vim',
    'breeze.vim',
    'brookstream.vim',
    'camo.vim',
    'candy.vim',
    'candycode.vim',
    'clarity.vim',
    'cleanphp.vim',
    'colorer.vim',
    'dante.vim',
    'darkZ.vim',
    'darkblue2.vim',
    'darkbone.vim',
    'darkslategray.vim',
    'darkspectrum.vim',
    'denim.vim',
    'desertEx.vim',
    'dusk.vim',
    'dw_blue.vim',
    'dw_cyan.vim',
    'dw_green.vim',
    'dw_orange.vim',
    'dw_purple.vim',
    'dw_red.vim',
    'dw_yellow.vim',
    'ekvoli.vim',
    'fnaqevan.vim',
    'freya.vim',
    'fruity.vim',
    'golden.vim',
    'guardian.vim',
    'herald.vim',
    'inkpot.vim',
    'ir_black.vim',
    'jammy.vim',
    'kellys.vim',
    'leo.vim',
    'lucius.vim',
    'manxome.vim',
    'maroloccio.vim',
    'matrix.vim',
    'molokai.vim',
    'moss.vim',
    'motus.vim',
    'mustang.vim',
    'navajo-night.vim',
    'neon.vim',
    'neverness.vim',
    'night.vim',
    'nightshimmer.vim',
    'no_quarter.vim',
    'northland.vim',
    'oceanblack.vim',
    'oceandeep.vim',
    'olive.vim',
    'railscasts.vim',
    'rdark.vim',
    'relaxedgreen.vim',
    'robinhood.vim',
    'rootwater.vim',
    'sea.vim',
    'settlemyer.vim',
    'softblue.vim',
    'synic.vim',
    'tabula.vim',
    'tango.vim',
    'tango2.vim',
    'tir_black.vim',
    'torte.vim',
    'vibrantink.vim',
    'vividchalk.vim',
    'wombat.vim',
    'wood.vim',
    'wuye.vim',
    'xemacs.vim',
    'xoria256.vim',
    'zenburn.vim',
    'zmrok.vim',

    # These ones use existing 'background' setting rather than setting it
    # explicitly:
    'baycomb.vim',
    'earendel.vim',
    'moria.vim',
    'peaksea.vim',
    'sienna.vim',
]

light_schemes = [
    'PapayaWhip.vim',
    'autumn.vim',
    'autumn2.vim',
    'autumnleaf.vim',
    'bclear.vim',
    'biogoo.vim',
    'buttercream.vim',
    'chela_light.vim',
    'dawn.vim',
    'eclipse.vim',
    'fine_blue.vim',
    'fog.vim',
    'fruit.vim',
    'habiLight.vim',
    'ironman.vim',
    'martin_krischik.vim',
    'navajo.vim',
    'nuvola.vim',
    'oceanlight.vim',
    'print_bw.vim',
    'pyte.vim',
    'satori.vim',
    'silent.vim',
    'simpleandfriendly.vim',
    'soso.vim',
    'spring.vim',
    'taqua.vim',
    'tcsoft.vim',
    'tolerable.vim',
    'vc.vim',
    'vylight.vim',
    'winter.vim',
]

patch_only = [
    'lettuce.vim', # separate gui & cterm sections with non-convertible bits

    # These calculate the terminal color from the gui color:
    'desert256.vim',
    'jellybeans.vim',
    'summerfruit256.vim',
    'wombat256.vim',

    # These calculate the gui color from the terminal color:
    'calmar256-dark.vim',
    'calmar256-light.vim',
]

def mkdir(path):
    try:
        os.makedirs(path)
    except OSError:
        pass

background_variations = ['set background=dark', 'set background=light']

test_variations = {
    # {'colorscheme.vim' : ['extra_cmds1', ...]}
    'baycomb.vim' : background_variations,
    'earendel.vim' : background_variations,
    'moria.vim' : background_variations, # Needs more
    'peaksea.vim' : background_variations,
    'sienna.vim' : ['let sienna_style="dark"', 'let sienna_style="light"'],
}

def make_test_file(schemefile, extra_cmds=None, variation=None):
    if extra_cmds is None:
        extra_cmds = 'echo'

    (scheme, ext) = os.path.splitext(schemefile)

    if variation is None:
        outname = scheme
    else:
        outname = '%s-%02d' % (scheme, variation)

    fabricate.run('vim', '-u', 'NONE', '-c',
                  r'set runtimepath^=runtime|set t_Co=256|set nocompatible|%s|'
                  r'colorscheme %s|redir! > test/%s.hi|silent hi|echo "\n"|q' %
                  (extra_cmds, scheme, outname))
    fabricate.run('sh', '-c',
                  r"sed -r -n -e 's/^(\w+)\s+xxx\s+(.*)/hi \1 \2/p' "
                  r"test/%s.hi > test/%s.vim" % (outname, outname))

def test_files():
    build()
    mkdir('test')

    for scheme in light_schemes + dark_schemes + patch_only:
        variations = test_variations.get(scheme)
        if variations:
            for (i, v) in enumerate(variations):
                make_test_file(scheme, v, i+1)
        else:
            make_test_file(scheme)

def patch(scheme):
    patch_file = os.path.join('patches', scheme + '.diff')
    if os.path.exists(patch_file):
        fabricate.run('sh', '-c',
                      'patch -p0 -o patched/%s originals/%s < %s' %
                      (scheme, scheme, patch_file))
    else:
        fabricate.run('cp', os.path.join('originals', scheme), 'patched/')

def build():
    mkdir('patched')
    for scheme in dark_schemes + light_schemes + patch_only:
        patch(scheme)

    mkdir('runtime/colors')
    for scheme in dark_schemes:
        fabricate.run('sh', '-c', './scripts/gui2xterm patched/' +
                                  scheme + ' > runtime/colors/' + scheme)

    for scheme in light_schemes:
        fabricate.run('sh', '-c', './scripts/gui2xterm --light patched/' +
                                  scheme + ' > runtime/colors/' + scheme)

    for scheme in patch_only:
        fabricate.run('cp', 'patched/' + scheme, 'runtime/colors/')

if __name__ == '__main__':
    fabricate.main()
